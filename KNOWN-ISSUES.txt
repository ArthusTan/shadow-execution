
Issues:
Global variable of pointer is not initialized correctly.
String constants (see string.c).
Unimplemented interpretation for instructions such as landingpad. It does not happen to execute because it is executed only in the case of an exception.  
Padding make concrete and shadow memory model inconsistent.

Notes:
Implementation of copyShadow. Because we implement it as a static function
pointer and assign it as create_global_symbol_table, we cannot enable
multiple anlaysis at once. Prefer to use inheritance in some way.

Optimizations for Instrumentation:

- Remove KVALUE for binary operations
- Remove KVALUE for bitwise operations
- Remove use of push_array in allocax

Need to do:
- Remove KVALUE for casting operations
- Remove KVALUE for store
- Remove the push calls as much as possible
- Remove fields in KVALUE as much as possible
     
Program |    Binary time | Instrumented time v1 | Note | Instrumented v2 |
LU.S |  0.14s | 24.99s | 22.49 | Reduce the number of push_getelementptr_inx with push_getelementptr_inx5. |
LU.A | 1m 27s
CG.S | 0.18s | 14.13s | 13.85 |
EP.S | 3.02s | 42.33s | 42.31 | Seems that array is not dominant here.
EP.A
MG.S | 0.05s | 2.78s | 2.77
MG.A | 6.13s | 
IS.S | 0.04s | 1s | 0.93
IS.A

Optimizations/Usability for Interpretation/Analysis:

- Index accessing for array
- Free memory
- Design pattern




TESTING:
  Checking at store
  Checking for branch divergence
  TODO:
    Model printf to check stdout
  COMMENT: 
    We also have syncing at load

TODO:
review bitwise operators.
printing operators makes it very helpful.
comparison fixing.
	   why would pwd go through?
checking for divergence.
how to compare two utilities.
output and logging info.
ptrtoint.
check in example (example + foo).
re-run everything.

CORE UTILITIES (97/100).

Latest run on 1/30/2014 at 9:59am.

=== 97 programs passing ===

base64 list.txt
basename list.txt   
cat list.txt
chcon -R --type=ssh_home_t
chgrp staff /usr/local
chmod +x temp.txt
chown root temp.txt
chroot
cksum list.txt
cp list.txt temp.txt
csplit -f xyz list.txt 11 72 98 
cut -c2 list.txt
dir ../arrayoutofbound/
dircolors ../arrayoutofbound/
dirname /usr/local
dd if=/dev/zero of=mytestfile.out bs=1 count=0 seek=1K
echo
env
expand list.txt
false --version
fmt list.txt
fold -5 list.txt
groups
hostid
id
install -b list.txt backup.txt
join list.txt list.txt
link list.txt link.txt
ln -s list.txt list.txt.2
ls ../arrayoutofbound/
logname
md5sum list.txt
mkdir hello
mkfifo temp
mknod temp.txt b 12 5
mktemp testingXXX
mv temp.txt out.txt
nice
nl list.txt
nohup time
nproc
numfmt 2
paste list.txt list.txt
pathchk -p /usr/local
pinky
printenv
pwd
readlink
realpath -L list.txt
rm out.txt 
rmdir hello
runcon
seq 2
sha1sum list.txt
sha224sum list.txt
sha256sum list.txt
sha384sum list.txt
sha512sum list.txt
shred -n 2 list.txt
shuf list.txt
split -b 22 list.txt list
stdbuf
sum list.txt
sync
tac list.txt
touch out.txt
tr
true --version
truncate -s 5 list.txt
tsort list.txt 
tty
uname
unexpand list.txt
uniq list.txt
unlink list.txt
uptime
whoami
wc list.txt
factor 8
timeout 1 sleep 10; date
ls | ./tee.out out
kill id
yes 1234567 | grep 1234567 | head -10
stat list.txt 
pr list.txt
sleep 2
who 
printf "%s" hello 
df -h 
od -b list.txt 
stty
tsort list.txt 
du -h 
tail -10 list.txt
head -10 list.txt
comm list.txt list.txt
vdir
expr  linux : lin 

**************
FAILING (5)
**************

INTERPRETATION:
    ./users.out (packed assertion fails) [UNINTERPRETED CALL INVOKES INSTRUMENTED FUNCTIONS - QSORT]
    ./sort.out list.txt (packed assertion fails) [UNINTERPRETED CALL INVOKES INSTRUMENTED FUNCTIONS - QSORT]
    ./ptx.out list.txt (packed assertion fails) [UNINTERPRETED CALL INVOKES INSTRUMENTED FUNCTIONS - QSORT]

NAS Parallel Benchmarks
================

bt.A.x [SEG FAULT]
bt.S.x [SEG FAULT]
cg.A.x [SEG FAULT]
dc.A.x [BRANCH DIVERGE]
ep.A.x [SEG FAULT]
ft.A.x [SEG FAULT]
lu.A.x [SEG FAULT]
mg.A.x [SEG FAULT]
sp.A.x [SEG FAULT]

SMALL INPUTS.
BT: equality.
CG: getelementptr_array assertion.
DC: out of memory.
EP: out of memory.
IS: out of memory.
LU: store assertion.
MG: findIndex assertion.
SP: store assertion.



GSL Programs
=========

blas [PASS]
bessel [PASS]
fft [PASS]
gaussian [PASS]
polyroots [PASS]
roots [PASS]
sum [PASS]
=======
